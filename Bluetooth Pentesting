Bluetooth Pentesting:
====================
(a)classical
 high energy,range & data rate
 audio streaming
(b)bluetooth_low_energy
 low energy,range & data rate
toplogy used is master/slave
      			 S    s
      			 |   /
      			 |  /
      			 | /
             |/
      s------m------s
            /|\
           / | \
          /  |  \
         /   |   \
        s    s    s
so, in all a master can have 7 slaves 
no two slaves can interact with each other, only interacts with their master. master can give them data and can ask for data from them too.
bluetooth have maac address too, their maacs are of 12 digits(first 6 digits represent the manufacturer)
connecting process:-
1.inquiry request- if two devices know nothing of each other then they send inquiry request, with it they bothh get to now of each other's address.
2.paging(connecting)- entering connected state after inquiry request.
pairing:-
=======
if two bl devices know about each other then they both automatically establish a connection b/w them.
how??
When the two devices pair for the first time, they exchange a pre-shared secret or link key. Each stores this link key to identify the other in future pairing.
bluetooth security-
=================
1. mode 1:: no security
2. mode 2:: service level security
3. mode 3:: device level security
HACKING BLUETOOTH:-
=================
(a)hciconfig:- in linux, just like iwconfig, "hciconfig" is there to check which bluetooth interfaces are connected.
(b)hcitool:- syntax:- "hcitool scan" it scans for available bl devices and tells us there name and maac address. we use hcitool inq to gather more info. see man hcitool and hcitool --help.
(c)sdptool:- it is capable of browsing a device for the services it provides. syntax:- "sdptool browse <mac address>" .
(d)l2ping:- to see if a bluetooth device is reachable or not (just like ping ), syntax:- "l2ping <mac address>" .
(e)BlueMaho:- sniffing tool. syntax:- "bluemaho.py" (gui tool)
hcidump:- sniffing bluetooth networks
Bluelog: A bluetooth site survey tool. It scans the area to find as many discoverable devices in the area and then logs them to a file.
Blueranger: A simple Python script that uses i2cap pings to locate Bluetooth devices and determine their approximate distances.
Redfang: This tool enables us to find hidden Bluetooth device.
Spooftooph: This is a Bluetooth spoofing tool.
=>search for imsicather, blubond attack